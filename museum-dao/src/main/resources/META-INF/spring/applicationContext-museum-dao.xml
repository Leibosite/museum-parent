<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd  
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">

	<context:component-scan base-package="com.qingruan.museum">
		 <context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />

	</context:component-scan>
	<bean id="properties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="localOverride" value="true"></property>
		<property name="ignoreResourceNotFound" value="true"></property>
		<property name="locations">
			<list>
				<!-- <value>file:/etc/usmp/usmp.conf</value> <value>file:/etc/usmp.conf</value> -->
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>
	<bean id="ShardedJedisSentinelPool"
		class="com.qingruan.museum.dao.redis.ShardedJedisSentinelPoolFactoryBean">
		<property name="minIdleStr" value="${redis.pool.minIdle}" />
		<property name="maxIdleStr" value="${redis.pool.maxIdle}" />
		<property name="maxTotalStr" value="${redis.pool.maxTotal}" />
		<property name="timeoutStr" value="${redis.timeout}" />
		<property name="testOnBorrowStr" value="${redis.pool.testonborrow}" />
		<property name="masterNames" value="${redis.sentinel.masterNames}" />
		<property name="urls" value="${redis.sentinel.urls}" />
	</bean>

	<bean id="jedisSentinelTemplate"
		class="com.qingruan.framework.redis.ShardedJedisSentinelPoolTemplate">
		<constructor-arg ref="ShardedJedisSentinelPool" />
		<property name="serializer">
			<bean
				class="com.qingruan.framework.redis.serializer.DefaultSerializer"></bean>
		</property>
	</bean>
	
	<!-- Redis消息队列 -->
	<bean id="redisMQPushSender" class="com.qingruan.museum.framework.esb.redispushpop.RedisMQPushSender">
		<property name="jedisSentinelTemplate" ref="jedisSentinelTemplate"></property>
	</bean>
	
	<bean id="redisMQBlpopReceiver" class="com.qingruan.museum.framework.esb.redispushpop.RedisMQBlpopReceiver">
		<property name="jedisSentinelTemplate" ref="jedisSentinelTemplate"></property>
	</bean>
	
	<bean id="redisPubSender" class="com.qingruan.museum.framework.esb.redispubsub.RedisPubSender">
		<property name="jedisSentinelTemplate" ref="jedisSentinelTemplate"></property>
	</bean>
	
	<bean id="redisSubReceiver" class="com.qingruan.museum.framework.esb.redispubsub.RedisSubReceiver">
		<property name="jedisSentinelTemplate" ref="jedisSentinelTemplate"></property>
	</bean>

	<bean id="noSqlClient"
		class="com.qingruan.museum.nosql.nosql.support.JedisSentinelNoSqlClient">
		<property name="template" ref="jedisSentinelTemplate"></property>
	</bean>

	<!-- 数据源配置, 使用Tomcat jdbc数据库连接池 -->
	<!-- <bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource"> -->
	<!-- <constructor-arg> -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<property name="poolProperties">
			<bean class="org.apache.tomcat.jdbc.pool.PoolProperties">
				<property name="url" value="${jdbc.url}" />
				<property name="driverClassName" value="${jdbc.driver}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
				<property name="jmxEnabled" value="true" />
				<property name="testWhileIdle" value="false" />
				<property name="testOnBorrow" value="true" />
				<property name="validationInterval" value="30000" />
				<property name="testOnReturn" value="false" />
				<property name="validationQuery" value="select 1" />
				<property name="timeBetweenEvictionRunsMillis" value="30000" />
				<property name="maxActive" value="10" />
				<property name="minIdle" value="10" />
				<property name="maxIdle" value="100" />
				<property name="initialSize" value="100" />
				<property name="maxWait" value="100000" />
				<property name="removeAbandonedTimeout" value="60" />
				<property name="minEvictableIdleTimeMillis" value="30000" />
				<property name="logAbandoned" value="false" />
				<property name="removeAbandoned" value="true" />
				<property name="jdbcInterceptors"
					value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer" />
				<property name="defaultAutoCommit" value="true"></property>
			</bean>
		</property>
	</bean>
	<!-- </constructor-arg> -->
	<!-- </bean> -->

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="${hibernate.jpa.packagesToScan}" />
		<property name="jpaProperties" ref="properties"></property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="${hibernate.show_sql}" />
				<property name="generateDdl" value="false" />
				<property name="database" value="${hibernate.dbtype}" />
			</bean>
		</property>
	</bean>

	<!-- Spring Data Jpa配置 -->
	<jpa:repositories base-package="com.qingruan.museum.dao"
		factory-class="com.qingruan.museum.dao.repository.criteria.CustomJpaRepositoryFactoryBean" />

	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- JSR303 Validator定义 -->
	<!-- <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" 
		/> -->
	<!-- Spring 缓存配置 -->

	<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效. -->
	<!-- <cache:annotation-driven cache-manager="redisCacheManager"/> <bean 
		id="redisClient" class="com.qingruan.framework.data.redis.jedis.ShardedJedisSentinelClient"> 
		<property name="jedisSentinelPools" ref="jedisSentinelPools" /> </bean> <bean 
		id="redisCacheManager" class="com.qingruan.framework.data.redis.cache.RedisCacheManager"> 
		<property name="redisClient" ref="redisClient"></property> </bean> -->
</beans>