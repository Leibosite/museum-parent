// Generated by CoffeeScript 1.6.3
(function() {
  var EnumSelectionBuilder, addPolicyRow, arrangePolicyBlock, baseFormObjectName, constraintCount, constraintDomainObj, constraintInterfaceObj, enumMap, executionCount, executionInterfaceObj, jsonData, jsonEnum, jsonObject, operatorBlockBuilder, operatorGenerator, valueValidateBinder;

  constraintCount = 1;

  executionCount = 1;

  baseFormObjectName = "policyForm";

  window.ctx = "";

  window.reservePolicyDisplay = function(policyData) {
    var constraintData, executionData, _i, _j, _len, _len1, _ref, _ref1, _results;
    if (policyData != null) {
      if (policyData.constraints != null) {
        _ref = policyData.constraints;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          constraintData = _ref[_i];
          if (constraintData.name != null) {
            arrangePolicyBlock({
              policyCount: constraintCount,
              policyType: "constraint",
              targetWrapper: "#constraints-block"
            }, constraintData);
            constraintCount++;
          }
        }
      }
      if (policyData.executions != null) {
        _ref1 = policyData.executions;
        _results = [];
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          executionData = _ref1[_j];
          if (executionData.name != null) {
            arrangePolicyBlock({
              policyCount: executionCount,
              policyType: "execution",
              targetWrapper: "#executions-block"
            }, executionData);
            _results.push(executionCount++);
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      }
    }
  };

  $(function() {
    $("#js-pma-validate").validate();
    $("#add-constraint").click(function() {
      arrangePolicyBlock({
        policyCount: constraintCount,
        policyType: "constraint",
        targetWrapper: "#constraints-block"
      });
      constraintCount++;
      return false;
    });
    return $("#add-execution").click(function() {
      arrangePolicyBlock({
        policyCount: executionCount,
        policyType: "execution",
        targetWrapper: "#executions-block"
      });
      executionCount++;
      return false;
    });
  });

  arrangePolicyBlock = function(params, policyData) {
    var ruleModelSelector;
    ruleModelSelector = $(addPolicyRow({
      count: params.policyCount,
      policyType: params.policyType
    })).appendTo($(params.targetWrapper));
    ruleModelSelector.hide().slideDown();
    ruleModelSelector.activateDomainSelection({
      count: params.policyCount,
      policyType: params.policyType
    }, policyData);
    return $("#js-close-btn-" + params.policyType + "-" + params.policyCount).click(function() {
      return $(this).parent().slideToggle(function() {
        return $(this).remove();
      });
    });
  };

  addPolicyRow = function(params) {
    var buildModelList, objectChain, ruleModelWapper;
    objectChain = "" + params.policyType + "s[" + params.count + "]";
    buildModelList = function(obj, type) {
      var executor, executorResult, stringBuffer, _i, _len, _ref;
      stringBuffer = "";
      executor = function(objList) {
        var executorResult, methodCallingExpress, methodModel, model, pModel, param, paramCache, paramJson, returnValueChosenClassName, returnValueClassName, returnValueDisplayName, returnValueType, subStringBuffer;
        return model = (function() {
          var _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;
          _results = [];
          for (_i = 0, _len = objList.length; _i < _len; _i++) {
            model = objList[_i];
            subStringBuffer = "";
            if ((model.subObjects != null) && model.subObjects.length > 0) {
              subStringBuffer += "<li class=\"dropdown-submenu\"><a href=\"#\"\n	pma-oper-type=\"" + model.valueType + "\"\n	pma-call-express=\"" + model.callingExpress + "\">\n	" + model.displayName + "</a>\n<ul class=\"dropdown-menu\">";
              _ref = executor(model.subObjects);
              for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
                executorResult = _ref[_j];
                subStringBuffer += executorResult;
              }
              subStringBuffer += "</ul></li>";
            } else if (model.methodModels != null) {
              subStringBuffer += "<li class=\"dropdown-submenu\">\n	<a href=\"#\"\n		pma-oper-type=\"" + model.valueType + "\"\n		pma-call-express=\"" + model.callingExpress + "\">\n		" + model.displayName + "</a>\n	<ul class=\"dropdown-menu\">";
              _ref1 = model.methodModels;
              for (methodCallingExpress in _ref1) {
                methodModel = _ref1[methodCallingExpress];
                paramCache = [];
                _ref2 = methodModel.params;
                for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
                  param = _ref2[_k];
                  pModel = new Object;
                  pModel.isService = true;
                  pModel.displayName = param.displayName;
                  pModel.valueType = param.valueType;
                  pModel.name = "" + objectChain + ".param";
                  pModel.valueClassName = param.className;
                  pModel.className = param.className;
                  pModel.callingExpress = param.callingExpress;
                  pModel.chosenClassName = param.chosenClassName;
                  pModel.staticValue = param.staticValue;
                  pModel.extraProp = param.extraProp;
                  pModel.multiple = param.multiple;
                  paramCache.push(pModel);
                }
                paramJson = JSON.stringify(paramCache);
                if (methodModel.returnModel != null) {
                  returnValueDisplayName = methodModel.returnModel.displayName;
                  returnValueType = methodModel.returnModel.valueType;
                  returnValueClassName = methodModel.returnModel.className;
                  returnValueChosenClassName = methodModel.returnModel.chosenClassName;
                } else {
                  returnValueClassName = "void";
                }
                subStringBuffer += "<li><a href=\"#\" pma-param-data='" + paramJson + "' \n	pma-value-classname=\"" + returnValueClassName + "\" \n	pma-oper-type=\"" + returnValueType + "\" \n	pma-call-express=\"" + methodModel.callingExpress + "\" \n	is-service=\"true\" \n	pma-return-value-display-name=\"" + returnValueDisplayName + "\" \n	pma-return-value-chosen-class-name=\"" + returnValueChosenClassName + "\" >\n		" + methodModel.displayName + "</a></li>";
              }
              subStringBuffer += "</ul></li>";
            } else {
              subStringBuffer += "<li><a href=\"#\" \n	pma-oper-type=\"" + model.valueType + "\"\n	pma-call-express=\"" + model.callingExpress + "\"\n	pma-value-classname=\"" + model.className + "\">\n	" + model.displayName + "\n	</a></li>";
            }
            _results.push(subStringBuffer);
          }
          return _results;
        })();
      };
      _ref = executor(obj);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        executorResult = _ref[_i];
        stringBuffer += executorResult;
      }
      return stringBuffer;
    };
    ruleModelWapper = "";
    if (params.policyType === "constraint") {
      ruleModelWapper = "<div id=\"" + params.policyType + "-list-" + params.count + "\" class=\"policy-content\">\n	<span class=\"badge\">#" + params.count + "</span>\n	<div id=\"" + params.policyType + "-element-" + params.count + "\" style=\"display:inline-block\" class=\"btn-group\">\n		<button data-toggle=\"dropdown\" class=\"btn btn-small dropdown-toggle\">请选择策略条件 <span class=\"caret\"></span>\n		</button>\n		<ul class=\"dropdown-menu\">\n			" + (buildModelList(constraintDomainObj)) + "\n			" + (buildModelList(constraintInterfaceObj)) + "\n		</ul>\n	</div>\n	<a id=\"js-close-btn-" + params.policyType + "-" + params.count + "\" style=\"position:absolute;right:1em;top:11px;\" class=\"btn-danger btn btn-mini\"><i class=\"icon-minus-sign icon-white\"></i></a>\n</div>";
    } else if (params.policyType === "execution") {
      ruleModelWapper = "<div id=\"" + params.policyType + "-list-" + params.count + "\" class=\"policy-content\">\n	<span class=\"badge\">#" + params.count + "</span>\n	<div id=\"" + params.policyType + "-element-" + params.count + "\" style=\"display:inline-block\" class=\"btn-group\">\n		<button data-toggle=\"dropdown\" class=\"btn btn-small dropdown-toggle\">请选择策略执行 <span class=\"caret\"></span>\n		</button>\n		<ul class=\"dropdown-menu\">\n			" + (buildModelList(executionInterfaceObj, "execution")) + "\n		</ul>\n	</div>\n	<a id=\"js-close-btn-" + params.policyType + "-" + params.count + "\" style=\"position:absolute;right:1em;top:11px;\" class=\"btn-danger btn btn-mini\"><i class=\"icon-minus-sign icon-white\"></i></a>\n</div>";
    }
    return ruleModelWapper;
  };

  valueValidateBinder = function(valueType) {
    var validateParam;
    return validateParam = (function() {
      switch (valueType) {
        case "LONG":
          return "digits";
        case "DOUBLE":
            return "digits";
        case "STRING":
          return "";
        case "OBJECT":
          return "";
        case "INTEGER":
          return "digits";
        case "ENUM":
          return "";
        case "BOOLEAN":
          return "";
      }
    })();
  };

  operatorGenerator = function(type, objectChain) {
    var operatorBlock, resultHtml;
    resultHtml = (function() {
      switch (type) {
        case "LONG":
          return operatorBlockBuilder(["GREATER", "LESS", "EQUALS", "NOT_EQUALS", "GREATER_EQUAL", "LESS_EQAUL"]);
        case "DOUBLE":
            return operatorBlockBuilder(["GREATER", "LESS", "EQUALS", "NOT_EQUALS", "GREATER_EQUAL", "LESS_EQAUL"]);
        case "STRING":
          return operatorBlockBuilder(["EQUALS", "NOT_EQUALS"]);
        case "OBJECT":
          return operatorBlockBuilder(["EQUALS", "NOT_EQUALS"]);
        case "INTEGER":
          return operatorBlockBuilder(["GREATER", "LESS", "EQUALS", "NOT_EQUALS", "GREATER_EQUAL", "LESS_EQAUL"]);
        case "ENUM":
          return operatorBlockBuilder(["EQUALS", "NOT_EQUALS"]);
        case "BOOLEAN":
          return operatorBlockBuilder(["EQUALS", "NOT_EQUALS"]);
      }
    })();
    operatorBlock = "<div style=\"display:inline-block\" class=\"btn-group operator\">\n	<button data-toggle=\"dropdown\" class=\"btn btn-mini btn-warning dropdown-toggle\">\n		<i class=\"icon-white icon-hand-up\"></i>\n		<span class=\"caret\"></span>\n		<input type=\"hidden\" name=\"" + objectChain + ".operatorType\" class=\"required\" style=\"display:none\">\n	</button>\n	<ul class=\"dropdown-menu\">\n		" + resultHtml + "\n	</ul>\n</div>";
    return operatorBlock;
  };

  operatorBlockBuilder = function(operators) {
    var operator, result, string_buffer, _i, _len;
    string_buffer = "";
    for (_i = 0, _len = operators.length; _i < _len; _i++) {
      operator = operators[_i];
      string_buffer += "<li><a href=\"#\">" + operator + "</a></li>";
    }
    return result = "<div class=\"sub-attributes\">\n	" + string_buffer + "\n</div>";
  };

  EnumSelectionBuilder = function(params) {
    var enumDisplay, enumSplit, enumStr, stringBuffer, _i, _len, _ref;
    stringBuffer = "<select class=\"input-small inputBlock\" style=\"display:inline-block;position:relative;margin:0 4px;width:160px\" name=\"" + params.objectChain + "\">\n	<option value=\"\">选择" + params.displayName + "</option>";
    _ref = jsonEnum[params.enumName];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      enumStr = _ref[_i];
      enumSplit = enumStr.split(".");
      enumDisplay = enumSplit[enumSplit.length - 1];
      stringBuffer += "<option value=\"" + enumStr + "\">" + enumDisplay + "</option>";
    }
    return stringBuffer += "</select>";
  };

  $.fn.extend({
    appendInputsBlock: function(options) {
      var $block, $holdingValue, block, end, end_path, path, start;
      if ((options.isService != null) && options.isService === true) {
        end_path = options.displayName;
      } else {
        path = options.displayName.split(".");
        end_path = path[path.length - 1];
      }
      block = "";
      if (options.valueType === "ENUM") {
        block = EnumSelectionBuilder({
          objectChain: options.name,
          enumName: options.valueClassName,
          displayName: options.displayName
        });
      } else if ((options.staticValue != null) && options.staticValue !== "") {
        block = "<input type=\"hidden\" name=\"" + options.name + "\" class=\"inputBlock\" value=\"" + options.staticValue + "\" />";
      } else if (options.valueType === "BOOLEAN") {
        block = "<select class=\"input-small inputBlock\" style=\"display:inline-block;position:relative;margin:0 4px;\" name=\"" + options.name + "\">\n	<option value=\"true\">True</option>\n	<option value=\"false\">False</option>\n</select>";
      } else if ((options.chosenClassName != null) && options.chosenClassName !== "") {
        if (options.multiple) {
          block = "<select name=\"" + options.name + "s\" multiple=\"multiple\" data-placeholder=\"" + options.displayName + "\" class=\"chzn-autoselect inputBlock\" style=\"display:inline-block;position:relative;margin:0 4px;\" ><option></option></select> ";
        } else {
          block = " <select name=\"" + options.name + "\" data-placeholder=\"" + options.displayName + "\" class=\"chzn-autoselect inputBlock\" style=\"display:inline-block;position:relative;margin:0 4px;\" ><option></option></select> ";
        }
      } else {
        block = "<input type=\"text\" name=\"" + options.name + "\" placeholder=\"" + end_path + "\" style=\"display:inline-block;position:relative;margin:0 4px;\" class=\"input-small inputBlock\">";
      }
      $block = $(block);
      $block.attr("class", $(block).attr("class") + " " + valueValidateBinder(options.valueType)).appendTo($(this));
      if ((options.chosenClassName != null) && options.chosenClassName !== "") {
        $block.ajaxChosen({
          original_chosen_option: {
            allow_single_deselect: true
          },
          method: 'GET',
          url: ("" + window.ctx + "/pma/datafetch/fetch") + options.chosenClassName,
          dataType: 'json'
        }, function(data) {
          var terms;
          terms = {};
          $.each(data, function(i, val) {
            return terms[i] = val;
          });
          return terms;
        });
        if (options.multiple) {
          $holdingValue = $("<input type=\"hidden\" name=\"" + options.name + "\" class=\"inputBlock multiValueContainer\"/>");
          $holdingValue.insertAfter($block);
          $block.change(function() {
            return $holdingValue.val($block.val().toString());
          });
        }
      }
      if ((options.extraProp != null) && options.extraProp.indexOf("timeChoose") === 0) {
        start = stringObject.indexOf("[");
        end = stringObject.indexOf("]");
        $block.timeHelperChoose({
          dateOptions: [options.extraProp.subString(start, end)]
        });
      } else {
        switch (options.extraProp) {
          case "day":
            $block.timeHelper({
              model: options.extraProp
            });
            break;
          case "month":
            $block.timeHelper({
              model: options.extraProp
            });
            break;
          case "year":
            $block.timeHelper({
              model: options.extraProp
            });
            break;
          case "cron":
            $block.timeHelper({
              model: options.extraProp
            });
        }
      }
      return false;
    }
  });

  $.fn.extend({
    activateDomainSelection: function(options, policyData) {
      var $chzn_a, $operator, $selectBlock, $targetSelectBlock, $valueBlock, $valueBlocks, chosenMethodDomainJson, chosenMethodDomainParams, chosenName, chosenSelectName, content, loop_i, objectChain, optionItem, optionList, valueBlock, _i, _j, _len, _len1, _results, _this;
      objectChain = "" + options.policyType + "s[" + options.count + "]";
      content = $(this).find("#" + options.policyType + "-element-" + options.count + " button.dropdown-toggle").get(0);
      _this = this;
      $(this).find("ul li a").click(function() {
        var callingExpress, isService, methodDomainParams, operator, operatorBlock, pObj, returnValueChosenClassName, returnValueDisplayName, title, type, valueClassName, _i, _len, _ref;
        isService = $(this).attr("is-service");
        if ((isService == null) || isService === "false") {
          return false;
        }
        $("#" + options.policyType + "-list-" + options.count + " .operator").remove();
        $("#" + options.policyType + "-list-" + options.count + " .inputBlock").remove();
        $("#" + options.policyType + "-list-" + options.count + " .chzn-container").remove();
        title = $(this).html();
        type = $(this).attr("pma-oper-type");
        valueClassName = $(this).attr("pma-value-classname");
        callingExpress = $(this).attr("pma-call-express");
        methodDomainParams = $(this).attr("pma-param-data");
        $(content).html(title + "<span class='caret'></span>" + ("<input type=\"hidden\" name=\"" + objectChain + ".name\" value=\"" + callingExpress + "\" style=\"display:none\">"));
        if ((isService != null) && isService === "true") {
          isService = true;
          _ref = $.parseJSON(methodDomainParams);
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            pObj = _ref[_i];
            _this.appendInputsBlock(pObj);
          }
        } else {
          isService = false;
        }
        $(content).append("<input type=\"hidden\" name=\"" + objectChain + ".isService\" value=\"" + isService + "\" style=\"display:none\">");
        if ((valueClassName != null) && valueClassName === "void") {

        } else {
          operatorBlock = operatorGenerator(type, objectChain);
          operatorBlock = $(operatorBlock).appendTo(_this);
          operator = operatorBlock.find("button.dropdown-toggle").get(0);
          $(operatorBlock).find("ul li a").click(function() {
            title = $(this).html();
            $(operator).find("i").remove();
            $(operator).prepend("<i>" + title + "</i>");
            $(operator).find("input[name='" + objectChain + ".operatorType']").val(title);
            $(operator).dropdown("toggle");
            return false;
          });
        }
        if ((valueClassName != null) && valueClassName === "void") {

        } else {
          if (isService) {
            returnValueDisplayName = $(this).attr("pma-return-value-display-name");
            returnValueChosenClassName = $(this).attr("pma-return-value-chosen-class-name");
            _this.appendInputsBlock({
              name: "" + objectChain + ".value",
              valueClassName: valueClassName,
              displayName: "" + returnValueDisplayName,
              valueType: type,
              chosenClassName: returnValueChosenClassName
            });
          } else {
            _this.appendInputsBlock({
              name: "" + objectChain + ".value",
              valueClassName: valueClassName,
              displayName: "" + callingExpress,
              valueType: type
            });
          }
        }
        return false;
      });
      if ((policyData != null) && (policyData.name != null)) {
        $selectBlock = $(this).find("ul li a[pma-call-express='" + policyData.name + "']");
        $selectBlock.click();
        $operator = $(this).find(".operator button");
        if ($operator.html() != null) {
          $operator.html("<i>" + policyData.operatorType + "</i>\n<span class=\"caret\"></span>\n<input type=\"hidden\" name=\"" + objectChain + ".operatorType\" value=\"" + policyData.operatorType + "\" style=\"display:none\">");
        }
        $valueBlock = $(this).find(".inputBlock[name='" + objectChain + ".value']");
        if ($valueBlock.html() != null) {
          if ($valueBlock.hasClass("chzn-autoselect")) {
            chosenName = $selectBlock.attr("pma-return-value-chosen-class-name");
            chosenSelectName = "";
            $.ajax({
              url: "" + window.ctx + "/pma/json/show" + chosenName + "/" + policyData.value,
              async: false,
              success: function(data) {
                var field;
                field = "name";
                if (chosenName === "Pcc") {
                  field = "chargingRuleName";
                } else if (chosenName === "QosRuleInfo") {
                  field = "qosRuleName";
                } else if (chosenName === "SubUser") {
                  field = "userName";
                } else if (chosenName === "MonitoringKey") {
                  field = "monitoringKey";
                } else if (chosenName === "Cell") {
                  field = "cellName";
                }
                return chosenSelectName = data[field];
              }
            });
            $chzn_a = $valueBlock.next().find("a.chzn-single");
            $chzn_a.removeClass("chzn-default");
            $chzn_a.find("span").html(chosenSelectName);
            $valueBlock.html("<option value=\"" + policyData.value + "\" selected=\"selected\">" + chosenSelectName + "<option>");
          } else {
            $valueBlock.val(policyData.value);
          }
        }
        $valueBlocks = $(this).find(".inputBlock[name='" + objectChain + ".param']");
        if ($valueBlocks.size() > 0) {
          loop_i = 0;
          _results = [];
          for (_i = 0, _len = $valueBlocks.length; _i < _len; _i++) {
            valueBlock = $valueBlocks[_i];
            if ($(valueBlock).hasClass("chzn-autoselect")) {
              chosenMethodDomainParams = $selectBlock.attr("pma-param-data");
              chosenMethodDomainJson = $.parseJSON(chosenMethodDomainParams);
              chosenSelectName = "";
              $.ajax({
                url: "" + window.ctx + "/pma/json/show" + chosenMethodDomainJson[loop_i].chosenClassName + "/" + policyData.param[loop_i],
                async: false,
                success: function(data) {
                  var field;
                  field = "name";
                  if (chosenMethodDomainJson[loop_i].chosenClassName === "Pcc") {
                    field = "chargingRuleName";
                  } else if (chosenMethodDomainJson[loop_i].chosenClassName === "QosRuleInfo") {
                    field = "qosRuleName";
                  } else if (chosenMethodDomainJson[loop_i].chosenClassName === "SubUser") {
                    field = "userName";
                  } else if (chosenMethodDomainJson[loop_i].chosenClassName === "MonitoringKey") {
                    field = "monitoringKey";
                  } else if (chosenMethodDomainJson[loop_i].chosenClassName === "Cell") {
                    field = "cellName";
                  }
                  return chosenSelectName = data[field];
                }
              });
              $(valueBlock).html("<option value=\"" + policyData.param[loop_i] + "\" selected=\"selected\">" + chosenSelectName + "</option>");
              $(valueBlock).trigger("liszt:updated");
            } else if ($(valueBlock).hasClass("multiValueContainer")) {
              chosenMethodDomainParams = $selectBlock.attr("pma-param-data");
              chosenMethodDomainJson = $.parseJSON(chosenMethodDomainParams);
              chosenSelectName = "";
              optionList = policyData.param[loop_i].split(",");
              $targetSelectBlock = $(valueBlock).prev();
              for (_j = 0, _len1 = optionList.length; _j < _len1; _j++) {
                optionItem = optionList[_j];
                $.ajax({
                  url: "" + window.ctx + "/pma/json/show" + chosenMethodDomainJson[loop_i].chosenClassName + "/" + optionItem,
                  async: false,
                  success: function(data) {
                    var field;
                    field = "name";
                    if (chosenMethodDomainJson[loop_i].chosenClassName === "Pcc") {
                      field = "chargingRuleName";
                    } else if (chosenMethodDomainJson[loop_i].chosenClassName === "QosRuleInfo") {
                      field = "qosRuleName";
                    } else if (chosenMethodDomainJson[loop_i].chosenClassName === "SubUser") {
                      field = "userName";
                    } else if (chosenMethodDomainJson[loop_i].chosenClassName === "MonitoringKey") {
                      field = "monitoringKey";
                    } else if (chosenMethodDomainJson[loop_i].chosenClassName === "Cell") {
                      field = "cellName";
                    }
                    return chosenSelectName = data[field];
                  }
                });
                $targetSelectBlock.append("<option value=\"" + optionItem + "\" selected=\"selected\">" + chosenSelectName + "</option>");
              }
              $targetSelectBlock.trigger("liszt:updated");
              $(valueBlock).val(policyData.param[loop_i]);
            } else {
              $(valueBlock).val(policyData.param[loop_i]);
            }
            _results.push(loop_i++);
          }
          return _results;
        }
      }
    }
  });
  //备份
  
  //jsonData = '{"constraintDomain":[],"constraintInterface":[{"displayName":"基本版本信息","description":"","className":"BasicInfoCheckService","packageInfo":"com.qingruan.museum.engine.service.rule.condition","methodModels":{"basicInfoCheckService.hardwareVersion":{"displayName":"硬件版本","description":"","serviceName":"hardwareVersion","returnModel":{"displayName":"硬件版本号","description":"","className":"String","packageInfo":"java.lang","subObjects":[],"valueType":"STRING","callingExpress":"string","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"basicInfoCheckService.hardwareVersion"},"basicInfoCheckService.softwareVersion":{"displayName":"软件版本","description":"","serviceName":"softwareVersion","returnModel":{"displayName":"软件版本号","description":"","className":"String","packageInfo":"java.lang","subObjects":[],"valueType":"STRING","callingExpress":"string","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"basicInfoCheckService.softwareVersion"}},"callingExpress":"basicInfoCheckService"},{"displayName":"公用条件","description":"","className":"CommonConditionService","packageInfo":"com.qingruan.museum.engine.service.rule.condition","methodModels":{"commonConditionService.intervalCheckOfCurrentTime":{"displayName":"当前是否处在指定时间段内","description":"","serviceName":"intervalCheckOfCurrentTime","returnModel":{"displayName":"current time belong specified interval","description":"","className":"Boolean","packageInfo":"java.lang","subObjects":[],"valueType":"BOOLEAN","callingExpress":"boolean","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},"params":[{"displayName":"Cron表达式","description":"","className":"String","packageInfo":"java.lang","subObjects":[],"valueType":"STRING","callingExpress":"string","staticValue":"","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"commonConditionService.intervalCheckOfCurrentTime"}},"callingExpress":"commonConditionService"},{"displayName":"上报监测数据归属","description":"","className":"MonitorDataAttributionService","packageInfo":"com.qingruan.museum.engine.service.rule.condition","methodModels":{"monitorDataAttributionService.area":{"displayName":"监测数据所属区域","description":"","serviceName":"area","returnModel":{"displayName":"目标区域","description":"","className":"Long","packageInfo":"java.lang","subObjects":[],"valueType":"LONG","callingExpress":"long","staticValue":"","chosenClassName":"Area","extraProp":"","multiple":false},"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"monitorDataAttributionService.area"}},"callingExpress": "monitorDataAttributionService"},{"displayName":"上报监测数据","description":"","className":"MonitorDataReportService","packageInfo":"com.qingruan.museum.engine.service.rule.condition","methodModels":{"monitorDataReportService.monitorDataReport":{"displayName":"上报监测数据","description":"","serviceName":"monitorDataReport","returnModel":{"displayName":"监测数据控制点","description":"","className":"Double","packageInfo":"java.lang","subObjects":[],"valueType":"DOUBLE","callingExpress":"double","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"上报数据指标类型","description":"","className":"MonitorDataType","packageInfo":"com.qingruan.museum.domain.models.enums","subObjects":[],"valueType":"ENUM","callingExpress":"monitorDataType","staticValue":"","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"monitorDataReportService.monitorDataReport"},"monitorDataReportService.monitorDataSaveFlag":{"displayName":"是否保存上报监测数据","description":"","serviceName":"monitorDataSaveFlag","returnModel":{"displayName":"保存上报监测数据Flag","description":"","className":"Boolean","packageInfo":"java.lang","subObjects":[],"valueType":"BOOLEAN","callingExpress":"boolean","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"保存标识","description":"","className":"SaveFlagType","packageInfo":"com.qingruan.museum.domain.models.enums","subObjects":[],"valueType":"ENUM","callingExpress":"saveFlagType","staticValue":"","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"monitorDataReportService.monitorDataSaveFlag"}},"callingExpress": "monitorDataReportService"}],"executionInterface":[{"displayName":"发送消息模板策略","description":"","className":"BsSendMsgByTemplate","packageInfo":"com.qingruan.museum.engine.service.rule.action","methodModels":{"bsSendMsgByTemplate.sendMsgByTemplate":{"displayName":"发送短信","description":"","serviceName":"sendMsgByTemplate","returnModel":null,"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"短信模版","description":"","className":"String","packageInfo":"java.lang","subObjects":[],"valueType":"STRING","callingExpress":"string","staticValue":"","chosenClassName":"SmsTemplate","extraProp":"","multiple":false},{"displayName":"短信","description":"","className":"String","packageInfo":"java.lang","subObjects":[],"valueType":"STRING","callingExpress":"string","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"发送周期控制","description":"","className":"Integer","packageInfo":"java.lang","subObjects":[],"valueType":"INTEGER","callingExpress":"integer","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"发送次数限制","description":"","className":"Integer","packageInfo":"java.lang","subObjects":[],"valueType":"INTEGER","callingExpress":"integer","staticValue":"","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"bsSendMsgByTemplate.sendMsgByTemplate"}},"callingExpress":"bsSendMsgByTemplate"},{"displayName":"上报预警或告警","description":"","className":"BsReportAlarmService","packageInfo":"com.qingruan.museum.engine.service.rule.action","methodModels":{"bsReportAlarmService.reportAlarm":{"displayName":"上报类型","description":"","serviceName":"reportAlarm","returnModel":null,"params":[{"displayName":"Ipcan Context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"告警上报类型","description":"","className":"WarnCatego","packageInfo":"com.qingruan.museum.domain.models.enums","subObjects":[],"valueType":"ENUM","callingExpress":"warnCatego","staticValue":"","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"bsReportAlarmService.reportAlarm"}},"callingExpress":"bsReportAlarmService"},{"displayName":"保存上报监测数据","description":"","className":"BsSaveMonitoringReportDataService","packageInfo":"com.qingruan.museum.engine.service.rule.action","methodModels":{"bsSaveMonitoringReportDataService.saveMonitoringRecord":{"displayName":"保存上报监测数据","description":"","serviceName":"saveMonitoringRecord","returnModel":null,"params":[{"displayName":"Ipcan Context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"数据类型","description":"","className":"RecordDataType","packageInfo":"com.qingruan.museum.domain.models.enums","subObjects":[],"valueType":"ENUM","callingExpress":"recordDataType","staticValue":"","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"bsSaveMonitoringReportDataService.saveMonitoringRecord"}},"callingExpress":"bsSaveMonitoringReportDataService"}],"allDomainModels":null,"allInterfaceModels":null}';
    //jsonObject = $.parseJSON(jsonData);
  jsonData = '{"constraintDomain":[],"constraintInterface":[{"displayName":"基本版本信息","description":"","className":"BasicInfoCheckService","packageInfo":"com.qingruan.museum.engine.service.rule.condition","methodModels":{"basicInfoCheckService.hardwareVersion":{"displayName":"硬件版本","description":"","serviceName":"hardwareVersion","returnModel":{"displayName":"硬件版本号","description":"","className":"String","packageInfo":"java.lang","subObjects":[],"valueType":"STRING","callingExpress":"string","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"basicInfoCheckService.hardwareVersion"},"basicInfoCheckService.softwareVersion":{"displayName":"软件版本","description":"","serviceName":"softwareVersion","returnModel":{"displayName":"软件版本号","description":"","className":"String","packageInfo":"java.lang","subObjects":[],"valueType":"STRING","callingExpress":"string","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"basicInfoCheckService.softwareVersion"}},"callingExpress":"basicInfoCheckService"},{"displayName":"公用条件","description":"","className":"CommonConditionService","packageInfo":"com.qingruan.museum.engine.service.rule.condition","methodModels":{"commonConditionService.intervalCheckOfCurrentTime":{"displayName":"当前是否处在指定时间段内","description":"","serviceName":"intervalCheckOfCurrentTime","returnModel":{"displayName":"current time belong specified interval","description":"","className":"Boolean","packageInfo":"java.lang","subObjects":[],"valueType":"BOOLEAN","callingExpress":"boolean","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},"params":[{"displayName":"Cron表达式","description":"","className":"String","packageInfo":"java.lang","subObjects":[],"valueType":"STRING","callingExpress":"string","staticValue":"","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"commonConditionService.intervalCheckOfCurrentTime"}},"callingExpress":"commonConditionService"},{"displayName":"上报监测数据归属","description":"","className":"MonitorDataAttributionService","packageInfo":"com.qingruan.museum.engine.service.rule.condition","methodModels":{"monitorDataAttributionService.area":{"displayName":"监测数据所属区域","description":"","serviceName":"area","returnModel":{"displayName":"目标区域","description":"","className":"Long","packageInfo":"java.lang","subObjects":[],"valueType":"LONG","callingExpress":"long","staticValue":"","chosenClassName":"Area","extraProp":"","multiple":false},"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"monitorDataAttributionService.area"},"monitorDataAttributionService.monitorPoint":{"displayName":"监测数据所属监测点","description":"","serviceName":"monitorPoint","returnModel":{"displayName":"目标监测点","description":"","className":"Long","packageInfo":"java.lang","subObjects":[],"valueType":"LONG","callingExpress":"long","staticValue":"","chosenClassName":"MonitorPoint","extraProp":"","multiple":false},"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"monitorDataAttributionService.monitorPoint"},"monitorDataAttributionService.monitorStation":{"displayName":"监测数据所属监测站","description":"","serviceName":"monitorStation","returnModel":{"displayName":"目标监测站","description":"","className":"Long","packageInfo":"java.lang","subObjects":[],"valueType":"LONG","callingExpress":"long","staticValue":"","chosenClassName":"MonitorStation","extraProp":"","multiple":false},"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"monitorDataAttributionService.monitorStation"}},"callingExpress": "monitorDataAttributionService"},{"displayName":"上报监测数据","description":"","className":"MonitorDataReportService","packageInfo":"com.qingruan.museum.engine.service.rule.condition","methodModels":{"monitorDataReportService.monitorDataReport":{"displayName":"上报监测数据","description":"","serviceName":"monitorDataReport","returnModel":{"displayName":"监测数据控制点","description":"","className":"Double","packageInfo":"java.lang","subObjects":[],"valueType":"DOUBLE","callingExpress":"double","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"上报数据指标类型","description":"","className":"MonitorDataType","packageInfo":"com.qingruan.museum.domain.models.enums","subObjects":[],"valueType":"ENUM","callingExpress":"monitorDataType","staticValue":"","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"monitorDataReportService.monitorDataReport"},"monitorDataReportService.monitorDataSaveFlag":{"displayName":"是否保存上报监测数据","description":"","serviceName":"monitorDataSaveFlag","returnModel":{"displayName":"保存上报监测数据Flag","description":"","className":"Boolean","packageInfo":"java.lang","subObjects":[],"valueType":"BOOLEAN","callingExpress":"boolean","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"保存标识","description":"","className":"SaveFlagType","packageInfo":"com.qingruan.museum.domain.models.enums","subObjects":[],"valueType":"ENUM","callingExpress":"saveFlagType","staticValue":"","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"monitorDataReportService.monitorDataSaveFlag"}},"callingExpress": "monitorDataReportService"}],"executionInterface":[{"displayName":"发送消息模板策略","description":"","className":"BsSendMsgByTemplate","packageInfo":"com.qingruan.museum.engine.service.rule.action","methodModels":{"bsSendMsgByTemplate.sendMsgByTemplate":{"displayName":"发送短信","description":"","serviceName":"sendMsgByTemplate","returnModel":null,"params":[{"displayName":"ipcan context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"短信模版","description":"","className":"String","packageInfo":"java.lang","subObjects":[],"valueType":"STRING","callingExpress":"string","staticValue":"","chosenClassName":"SmsTemplate","extraProp":"","multiple":false},{"displayName":"短信","description":"","className":"String","packageInfo":"java.lang","subObjects":[],"valueType":"STRING","callingExpress":"string","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"发送周期控制","description":"","className":"Integer","packageInfo":"java.lang","subObjects":[],"valueType":"INTEGER","callingExpress":"integer","staticValue":"","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"发送次数限制","description":"","className":"Integer","packageInfo":"java.lang","subObjects":[],"valueType":"INTEGER","callingExpress":"integer","staticValue":"","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"bsSendMsgByTemplate.sendMsgByTemplate"}},"callingExpress":"bsSendMsgByTemplate"},{"displayName":"上报预警或告警","description":"","className":"BsReportAlarmService","packageInfo":"com.qingruan.museum.engine.service.rule.action","methodModels":{"bsReportAlarmService.reportAlarm":{"displayName":"上报类型","description":"","serviceName":"reportAlarm","returnModel":null,"params":[{"displayName":"Ipcan Context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"告警上报类型","description":"","className":"WarnCatego","packageInfo":"com.qingruan.museum.domain.models.enums","subObjects":[],"valueType":"ENUM","callingExpress":"warnCatego","staticValue":"","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"bsReportAlarmService.reportAlarm"}},"callingExpress":"bsReportAlarmService"},{"displayName":"保存上报监测数据","description":"","className":"BsSaveMonitoringReportDataService","packageInfo":"com.qingruan.museum.engine.service.rule.action","methodModels":{"bsSaveMonitoringReportDataService.saveMonitoringRecord":{"displayName":"保存上报监测数据","description":"","serviceName":"saveMonitoringRecord","returnModel":null,"params":[{"displayName":"Ipcan Context","description":"","className":"IpcanContext","packageInfo":"com.qingruan.museum.session","subObjects":[],"valueType":"OBJECT","callingExpress":"ipcanContext","staticValue":"ipcanContext","chosenClassName":"","extraProp":"","multiple":false},{"displayName":"数据类型","description":"","className":"RecordDataType","packageInfo":"com.qingruan.museum.domain.models.enums","subObjects":[],"valueType":"ENUM","callingExpress":"recordDataType","staticValue":"","chosenClassName":"","extraProp":"","multiple":false}],"callingExpress":"bsSaveMonitoringReportDataService.saveMonitoringRecord"}},"callingExpress":"bsSaveMonitoringReportDataService"}],"allDomainModels":null,"allInterfaceModels":null}';
  jsonObject = $.parseJSON(jsonData);
  
  constraintDomainObj = jsonObject.constraintDomain;

  constraintInterfaceObj = jsonObject.constraintInterface;

  executionInterfaceObj = jsonObject.executionInterface;

  
  enumMap = '{"SaveFlagType":["SaveFlagType.SAVE","SaveFlagType.NON_SAVE"],"RecordDataType":["RecordDataType.ALL","RecordDataType.EQUIPMENT","RecordDataType.ENVIRONMENT"],"AlarmType":["AlarmType.ALARM","AlarmType.WARNING"],"MonitorDataType":["MonitorDataType.CO2","MonitorDataType.SO2","MonitorDataType.POWER","MonitorDataType.TEMPERATURE","MonitorDataType.HUMIDITY","MonitorDataType.ILLUMINANCE","MonitorDataType.UV_INTENSITY","MonitorDataType.TVOC","MonitorDataType.PM2_5","MonitorDataType.PM1_0","MonitorDataType.FORMALCLEHYDE","MonitorDataType.PM10"],"WarnCatego":["WarnCatego.MONITORING_EQUIPMENT_POWER","WarnCatego.MONITORING_EQUIPMENT_DAMAGE","WarnCatego.MONITORING_ENVIRONMENT_SO2","WarnCatego.MONITORING_ENVIRONMENT_CO2","WarnCatego.MONITORING_ENVIRONMENT_TEMPERATURE","WarnCatego.MONITORING_ENVIRONMENT_HUMIDITY","WarnCatego.MONITORING_ENVIRONMENT_LIGHTING","WarnCatego.MONITORING_ENVIRONMENT_UV","WarnCatego.MONITORING_ENVIRONMENT_VOC","WarnCatego.MONITORING_ENVIRONMENT_PM2_5","WarnCatego.MONITORING_ENVIRONMENT_PM10","WarnCatego.MONITORING_ENVIRONMENT_PM1_0","WarnCatego.MONITORING_ENVIRONMENT_PM_01_03","WarnCatego.MONITORING_ENVIRONMENT_PM_01_05","WarnCatego.MONITORING_ENVIRONMENT_PM_01_10","WarnCatego.MONITORING_ENVIRONMENT_PM_01_50","WarnCatego.MONITORING_ENVIRONMENT_PM_01_100"]}';
  
  jsonEnum = $.parseJSON(enumMap);


}).call(this);
