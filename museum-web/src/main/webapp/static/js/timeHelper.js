// Generated by CoffeeScript 1.6.3
(function() {
  $.fn.extend({
    timeHelper: function(options) {
      var container, copyprop, cronSelect, cronSelectBlock, dateSelect, dateSelectBlock, fmt, initialValue, settings, target, weekSelect, weekSelectBlock;
      settings = {
        model: 'day',
        method: 'bind',
        path: ''
      };
      settings = $.extend(settings, options);
      fmt = {
        dayDateForm: {
          language: 'zh-CN',
          startView: 0,
          format: 'hh:ii',
          minuteStep: 10,
          maxView: 1
        },
        monthDateFmt: {
          language: 'zh-CN',
          startView: 2,
          format: 'mm月dd日',
          maxView: 2,
          minView: 2
        },
        yearDateFmt: {
          language: 'zh-CN',
          startView: 3,
          format: 'mm月',
          maxView: 3,
          minView: 3
        }
      };
      weekSelectBlock = "<select>\n	<option value=\"1\">星期一</option>\n	<option value=\"2\">星期二</option>\n	<option value=\"3\">星期三</option>\n	<option value=\"4\">星期四</option>\n	<option value=\"5\">星期五</option>\n	<option value=\"6\">星期六</option>\n	<option value=\"7\">星期日</option>\n</select>";
      dateSelectBlock = "<input type=\"text\" />";
      cronSelectBlock = "<div><div style=\"display:inline-block\"></div><input type=\"text\" value=\"\"/></div>";
      copyprop = function(dest, orig) {
        var attributes;
        attributes = orig.prop("attributes");
        $.each(attributes, function() {
          if (this.name !== "type") {
            return dest.attr(this.name, this.value);
          }
        });
        return dest;
      };
      if (settings.model === 'cron') {
        cronSelect = $(cronSelectBlock);
        container = cronSelect.find('div');
        target = cronSelect.find('input');
        initialValue = ($(this).val() != null) && $(this).val() !== "" ? $(this).val() : "* * * * *";
        copyprop(target, $(this));
        $(this).replaceWith(cronSelect);
        container.cron({
          useGentleSelect: true,
          initial: initialValue,
          onChange: function() {
            return target.val(container.cron('value'));
          }
        });
        return cronSelect;
      } else if (settings.model === 'week') {
        weekSelect = $(weekSelectBlock);
        copyprop(weekSelect, $(this));
        $(this).replaceWith(weekSelect);
        return weekSelect;
      } else {
        dateSelect = $(dateSelectBlock);
        copyprop(dateSelect, $(this));
        $(dateSelect).datetimepicker(fmt[settings.model + 'DateFmt']);
        $(this).replaceWith(dateSelect);
        return dateSelect;
      }
    }
  });

  $.fn.extend({
    timeHelperChoose: function(options) {
      var option, settings, target, timeHelperChooseBlock, timeHelperChooseStr, _i, _len, _ref;
      settings = {
        dateOptions: ["day", "week", "month", "year", "cron"]
      };
      settings = $.extend(settings, options);
      timeHelperChooseStr = "<select><option value=''>请选择</option>";
      _ref = settings.dateOptions;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        option = _ref[_i];
        timeHelperChooseStr += "<option value=" + option + ">" + option + "</option>";
      }
      timeHelperChooseStr += "</select>";
      timeHelperChooseBlock = $(timeHelperChooseStr);
      $(this).before(timeHelperChooseBlock);
      target = $(this);
      return timeHelperChooseBlock.bind('change', function() {
        return target = target.timeHelper({
          model: timeHelperChooseBlock.val()
        });
      });
    }
  });

}).call(this);
